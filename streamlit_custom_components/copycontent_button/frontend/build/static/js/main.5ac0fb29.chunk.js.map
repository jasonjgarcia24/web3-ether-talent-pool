{"version":3,"sources":["CopyContentButton.tsx","index.tsx"],"names":["CopyContentButton","render","str","props","args","lead_str","copy_str","href","color","padding","margin","background","font_size","font_weight","StyledStack","styled","Stack","fontSize","fontWeight","direction","alignItems","spacing","Link","target","underline","IconButton","aria-label","size","onClick","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","getElementById"],"mappings":"iSAcMA,E,4MACGC,OAAS,WACd,IAAMC,EAAW,EAAKC,MAAMC,KAAX,IACXC,EAAW,EAAKF,MAAMC,KAAX,SACXE,EAAW,EAAKH,MAAMC,KAAX,SACXG,EAAW,EAAKJ,MAAMC,KAAX,KAGXI,GAFW,EAAKL,MAAMC,KAAX,IAEG,EAAKD,MAAMC,KAAX,OACdK,EAAc,EAAKN,MAAMC,KAAX,QACdM,EAAc,EAAKP,MAAMC,KAAX,OACdO,EAAc,EAAKR,MAAMC,KAAX,WACdQ,EAAc,EAAKT,MAAMC,KAAX,UACdS,EAAc,EAAKV,MAAMC,KAAX,YAEdU,EAAcC,YAAOC,IAAPD,CAAc,CAChCE,SAAUL,EACVM,WAAYL,EACZL,MAAOA,EACPC,QAASA,EACTC,OAAQA,EACRC,WAAYA,IAYd,OACE,kBAACG,EAAD,CAAaK,UAAU,MAAMC,WAAW,SAASC,QAAS,GACvDhB,EAAU,OACX,kBAACiB,EAAA,EAAD,CAAMf,KAAMA,EAAMgB,OAAO,SAASC,UAAU,SACzCtB,GAEH,kBAACuB,EAAA,EAAD,CAAYC,aAAW,OAAOC,KAAK,QAAQC,QAf/C,WACE,IAAIC,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMK,MAAQ5B,EACduB,EAAMM,SACNL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,KAUtB,kBAAC,IAAD,S,YAxCsBS,KA+CjBC,cAAwBvC,GCzDvCwC,IAASvC,OACP,kBAAC,IAAMwC,WAAP,KACE,kBAAC,EAAD,OAEFX,SAASY,eAAe,W","file":"static/js/main.5ac0fb29.chunk.js","sourcesContent":["import { styled } from \"@material-ui/core\"\r\nimport Stack from '@mui/material/Stack'\r\nimport Link from '@mui/material/Link';\r\nimport IconButton from '@mui/material/IconButton'\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\r\n\r\nimport {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\n\r\nimport React, { ReactNode } from \"react\"\r\n\r\n\r\nclass CopyContentButton extends StreamlitComponentBase {\r\n  public render = (): ReactNode => {\r\n    const str      = this.props.args[\"str\"]\r\n    const lead_str = this.props.args[\"lead_str\"]\r\n    const copy_str = this.props.args[\"copy_str\"]\r\n    const href     = this.props.args[\"href\"]\r\n    const key      = this.props.args[\"key\"]\r\n\r\n    const color       = this.props.args[\"color\"]\r\n    const padding     = this.props.args[\"padding\"]\r\n    const margin      = this.props.args[\"margin\"]\r\n    const background  = this.props.args[\"background\"]\r\n    const font_size   = this.props.args[\"font_size\"]\r\n    const font_weight = this.props.args[\"font_weight\"]\r\n    \r\n    const StyledStack = styled(Stack)({\r\n      fontSize: font_size,\r\n      fontWeight: font_weight,\r\n      color: color,\r\n      padding: padding,\r\n      margin: margin,\r\n      background: background\r\n    });\r\n\r\n    function handleClick() {\r\n      var dummy = document.createElement(\"textarea\");\r\n      document.body.appendChild(dummy);\r\n      dummy.value = copy_str;\r\n      dummy.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(dummy);\r\n    }\r\n\r\n    return (\r\n      <StyledStack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n        {lead_str}{\"\\xa0\"}\r\n        <Link href={href} target=\"_blank\" underline=\"hover\">\r\n          {str}\r\n        </Link>\r\n        <IconButton aria-label=\"copy\" size=\"small\" onClick={handleClick}>\r\n          <ContentCopyIcon />\r\n        </IconButton>\r\n      </StyledStack>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(CopyContentButton)\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CopyContentButton from \"./CopyContentButton\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CopyContentButton />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}