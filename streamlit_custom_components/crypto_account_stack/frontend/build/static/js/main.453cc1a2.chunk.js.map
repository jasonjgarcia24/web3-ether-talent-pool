{"version":3,"sources":["CryptoAccountStack.tsx","index.tsx"],"names":["CryptoAccountStack","render","header_str","props","args","address_str_val","address_str_hdr","balance_str_val","balance_str_unit","balance_str_hdr","copy_str","href","color","padding","margin","background","font_size","font_weight","width","text_align","StyledStack","styled","Stack","fontSize","fontWeight","border","borderRadius","direction","alignItems","spacing","Box","sx","p","m","textAlign","style","Link","target","underline","IconButton","aria-label","size","onClick","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","getElementById"],"mappings":"8SAgBMA,E,4MACGC,OAAS,WACd,IAAMC,EAAmB,EAAKC,MAAMC,KAAX,WACnBC,EAAmB,EAAKF,MAAMC,KAAX,gBACnBE,EAAmB,EAAKH,MAAMC,KAAX,gBACnBG,EAAmB,EAAKJ,MAAMC,KAAX,gBACnBI,EAAmB,EAAKL,MAAMC,KAAX,iBACnBK,EAAmB,EAAKN,MAAMC,KAAX,gBACnBM,EAAmB,EAAKP,MAAMC,KAAX,SACnBO,EAAmB,EAAKR,MAAMC,KAAX,KAEnBQ,EAAc,EAAKT,MAAMC,KAAX,MACdS,EAAc,EAAKV,MAAMC,KAAX,QACdU,EAAc,EAAKX,MAAMC,KAAX,OACdW,EAAc,EAAKZ,MAAMC,KAAX,WACdY,EAAc,EAAKb,MAAMC,KAAX,UACda,EAAc,EAAKd,MAAMC,KAAX,YACdc,EAAc,EAAKf,MAAMC,KAAX,MACde,EAAc,EAAKhB,MAAMC,KAAX,WAEdgB,EAAcC,YAAOC,IAAPD,CAAc,CAChCE,SAAUP,EACVQ,WAAYP,EACZL,MAAOA,EACPG,WAAYA,EACZD,OAAQ,IACRW,OAAQ,sBACRC,aAAc,SAwBhB,OACE,kBAACN,EAAD,CAAaO,UAAU,MAAMC,WAAW,SAASC,QAAS,GACxD,kBAACC,EAAA,EAAD,CACEC,GAAI,CACFb,MAAOA,EACPc,EAAGnB,EACHoB,EAAGnB,EACHoB,UAAWf,IAGb,wBAAIgB,MA/BuB,CAC/BZ,SAAU,OACVC,WAAY,OACZV,OAAQ,IACRD,QAAS,iBA2BiBX,GACtB,uBAAGiC,MAzBuB,CAC9BrB,OAAQ,IACRD,QAAS,MAwBH,2BAAIP,GAAqB,OACzB,kBAAC8B,EAAA,EAAD,CAAMzB,KAAMA,EAAM0B,OAAO,SAASC,UAAU,SACzCjC,GAEH,kBAACkC,EAAA,EAAD,CAAYC,aAAW,OAAOC,KAAK,QAAQC,QAzBnD,WACE,IAAIC,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMK,MAAQtC,EACdiC,EAAMM,SACNL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,KAoBlB,kBAAC,IAAD,QAGJ,2BAAG,2BAAIlC,GAAP,IAA6BF,EAA7B,KAAgDC,EAAhD,Q,YAvEuB4C,KA8ElBC,cAAwBrD,GC1FvCsD,IAASrD,OACP,kBAAC,IAAMsD,WAAP,KACE,kBAAC,EAAD,OAEFX,SAASY,eAAe,W","file":"static/js/main.453cc1a2.chunk.js","sourcesContent":["import { styled } from \"@material-ui/core\"\r\nimport Stack from '@mui/material/Stack'\r\nimport Link from '@mui/material/Link';\r\nimport IconButton from '@mui/material/IconButton'\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\r\nimport Box from '@mui/material/Box';\r\nimport CSS from 'csstype';\r\n\r\nimport {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\n\r\nimport React, { ReactNode } from \"react\"\r\n\r\n\r\nclass CryptoAccountStack extends StreamlitComponentBase {\r\n  public render = (): ReactNode => {\r\n    const header_str       = this.props.args[\"header_str\"]\r\n    const address_str_val  = this.props.args[\"address_str_val\"]\r\n    const address_str_hdr  = this.props.args[\"address_str_hdr\"]\r\n    const balance_str_val  = this.props.args[\"balance_str_val\"]\r\n    const balance_str_unit = this.props.args[\"balance_str_unit\"]\r\n    const balance_str_hdr  = this.props.args[\"balance_str_hdr\"]\r\n    const copy_str         = this.props.args[\"copy_str\"]\r\n    const href             = this.props.args[\"href\"]\r\n\r\n    const color       = this.props.args[\"color\"]\r\n    const padding     = this.props.args[\"padding\"]\r\n    const margin      = this.props.args[\"margin\"]\r\n    const background  = this.props.args[\"background\"]\r\n    const font_size   = this.props.args[\"font_size\"]\r\n    const font_weight = this.props.args[\"font_weight\"]\r\n    const width       = this.props.args[\"width\"]\r\n    const text_align  = this.props.args[\"text_align\"]\r\n    \r\n    const StyledStack = styled(Stack)({\r\n      fontSize: font_size,\r\n      fontWeight: font_weight,\r\n      color: color,\r\n      background: background,\r\n      margin: \"0\",\r\n      border: \"1px solid lightblue\",\r\n      borderRadius: \"15px\",\r\n    });\r\n\r\n    const h2Styles: CSS.Properties = {\r\n      fontSize: \"24px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"0\",\r\n      padding: \"10px 0 5px 0\",\r\n    }\r\n\r\n    const pStyles: CSS.Properties = {\r\n      margin: \"0\",\r\n      padding: \"0\"\r\n    }\r\n\r\n    function handleClick() {\r\n      var dummy = document.createElement(\"textarea\");\r\n      document.body.appendChild(dummy);\r\n      dummy.value = copy_str;\r\n      dummy.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(dummy);\r\n    }\r\n\r\n    return (\r\n      <StyledStack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n        <Box\r\n          sx={{\r\n            width: width,\r\n            p: padding,\r\n            m: margin,\r\n            textAlign: text_align,\r\n          }}\r\n        >\r\n          <h2 style={h2Styles}>{header_str}</h2>\r\n          <p style={pStyles}>\r\n            <b>{address_str_hdr}</b>{\"\\xa0\"}\r\n            <Link href={href} target=\"_blank\" underline=\"hover\">\r\n              {address_str_val}\r\n            </Link>            \r\n            <IconButton aria-label=\"copy\" size=\"small\" onClick={handleClick}>\r\n              <ContentCopyIcon />\r\n            </IconButton>\r\n          </p>\r\n          <p><b>{balance_str_hdr}</b> {balance_str_val} ({balance_str_unit})</p>\r\n        </Box>\r\n      </StyledStack>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(CryptoAccountStack)\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CryptoAccountStack from \"./CryptoAccountStack\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CryptoAccountStack />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}